name: fpx

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths:
      - ".github/workflows/fpx.yaml"
      - "lib/**"
      - "test/**"
      - "pubspec.yaml"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/fpx.yaml"
      - "lib/**"
      - "test/**"
      - "pubspec.yaml"

jobs:
  semantic-pull-request:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1

  build:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/dart_package.yml@v1

  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: ðŸ“š Git Checkout
        uses: actions/checkout@v4

      - name: ðŸŽ¯ Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: "stable"

      - name: ðŸ“¦ Install Dependencies
        run: dart pub get

      - name: ðŸ§ª Run Tests
        run: dart test --concurrency=1

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: ðŸ“š Git Checkout
        uses: actions/checkout@v4

      - name: ðŸŽ¯ Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: "stable"

      - name: ðŸ“¦ Install Dependencies
        run: dart pub get

      - name: ðŸ§ª Run Tests with Coverage
        run: dart test --coverage=coverage

      - name: ðŸ“‹ Format Coverage
        run: dart pub global activate coverage && dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --report-on=lib

      - name: ðŸ“Š Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v3
        with:
          path: coverage/lcov.info
          min_coverage: 80

  spell-check:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/spell_check.yml@v1
    with:
      includes: |
        **/*.md
        !brick/**/*.md
        .*/**/*.md
      modified_files_only: false

  verify-version:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“š Git Checkout
        uses: actions/checkout@v4

      - name: ðŸŽ¯ Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: "stable"

      - name: ðŸ“¦ Install Dependencies
        run: dart pub get

      - name: ðŸ”Ž Verify version
        run: dart run test --run-skipped -t version-verify
