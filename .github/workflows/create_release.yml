name: Create release

on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Type of version'
        type: choice
        default: 'patch'
        options:
        - patch
        - minor
        - major
      version-manual:
        description: 'Manual version'
        type: string

jobs:
  create-release:
    name: "New release creation"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'develop'
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.name "GitHub actions release flow"
          git config user.email noreply@github.com

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gawk yq

      - name: Generate new version
        id: generate-version
        run: |
          if [[ ! -z "${{ inputs.version-manual }}" ]]; then
            VERSION="${{ inputs.version-manual }}"
          else
            CURRENT_VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: *\(.*\)/\1/')
            IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
            case "${{ inputs.version-type }}" in
              major) VERSION_PARTS[0]=$((VERSION_PARTS[0] + 1)); VERSION_PARTS[1]=0; VERSION_PARTS[2]=0;;
              minor) VERSION_PARTS[1]=$((VERSION_PARTS[1] + 1)); VERSION_PARTS[2]=0;;
              patch) VERSION_PARTS[2]=$((VERSION_PARTS[2] + 1));;
            esac
            VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
          fi
          git tag "$VERSION" -m "$VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Create release branch
        run: |
          BRANCH="release/${{ env.version }}"
          git checkout -b $BRANCH
          echo "branch=$BRANCH" >> $GITHUB_ENV

      - name: Update version in pubspec.yaml
        run: |
          sed -i "s/^version: .*/version: ${{ env.version }}/" pubspec.yaml
          git add pubspec.yaml
          git commit -m "Bump version to ${{ env.version }}"

      - name: Add empty Section in CHANGELOG.md
        run: |
          # Add new empty section at the bottom of CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "\n## [${{ env.version }}] - $(date '+%Y-%m-%d')" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "Add empty section for version ${{ env.version }} in CHANGELOG.md"
      
      - name: Push new branch and tag
        run: |
          git push origin ${{ env.branch }}
          git push origin ${{ env.version }}

      - name: Create Pull Request to main
        uses: actions/github-script@v7
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: 'Release ${{ env.version }}',
              owner,
              repo,
              head: '${{ env.branch }}',
              base: 'main',
              body: 'This PR is auto-generated by create-release job'
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['release']
            });

      - name: Create Pull Request to develop
        uses: actions/github-script@v7
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: 'Release ${{ env.version }}',
              owner,
              repo,
              head: '${{ env.branch }}',
              base: 'develop',
              body: 'This PR is auto-generated by create-release job'
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['release']
            });